{"version":3,"sources":["components/ResultItem/index.jsx","components/ResultList/index.jsx","components/Header/index.jsx","utils/GPA.js","components/FileReader/index.jsx","components/Footer/index.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["ResultItem","props","type","title","gpa","wam","className","ResultList","gpaData","useContext","AppContext","toFixed","undefined","byYear","map","year","bySemester","semester","semesterName","Header","GradePointAverage","HTMLString","this","__processHTMLString","totalSubjects","__rawData2Array","__classifySubjects","dataTable","DOMParser","parseFromString","querySelector","rawScoreData","querySelectorAll","forEach","subject","score","gradePoint","info","name","childNodes","textContent","replaceAll","trim","credit","parseFloat","length","parseInt","__isNotPassedSubject","__isValidNotPassedSubjectInfo","__addSubject","subjectInfo","includes","subjectName","subjectScore","subjectCredit","subjectGradePoint","subjectSemester","push","__createNewSubjectData","subjectsOfSemesters","subjectsOfYears","data","scores","slice","subjects","totalGradePointMulCredit","totalCredit","totalScoreMulCredit","Number","isNaN","__levelConvert2Score","result","__computeGPA","__computeWAM","FileReaderComponent","useState","size","fileInfo","setFileInfo","loaded","setLoaded","computed","setComputed","file","useRef","useEffect","GPAStat","id","ref","onChange","event","target","files","htmlFor","onClick","current","fileReader","FileReader","currentFile","readAsText","onloadend","evt","content","setGPAData","gpaAndWAM","error","alert","Footer","React","createContext","App","Provider","value","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f24d923f.chunk.js","sourcesContent":["import \"./index.css\"\r\n\r\nconst ResultItem = (props) => {\r\n  // console.log(props);\r\n  const {type, title, gpa, wam} = props\r\n  return <div className={\"resultCard\"}>\r\n    <p className={\"item-title\"}>{type}:{title}</p>\r\n    <p className={\"item-gpa\"}>平均绩点: {gpa}</p>\r\n    <p className={\"item-wam\"}>加权平均分: {wam}</p>\r\n  </div>\r\n}\r\n\r\nexport default ResultItem\r\n","import {useContext} from \"react\";\r\nimport {AppContext} from \"../../App\";\r\nimport ResultItem from \"../ResultItem\";\r\nimport \"./index.css\"\r\n\r\n\r\nconst ResultList = (props) => {\r\n  const { gpaData } = useContext(AppContext)\r\n  // console.log(\"Result List\",gpaData)\r\n  return <>\r\n    <div className={\"listContainer\"}>\r\n      {gpaData.gpa !== 0 ? <ResultItem type={\"总计\"} gpa={gpaData.gpa.toFixed(4)} wam={gpaData.wam.toFixed(4)}/> : \"\"}\r\n    </div>\r\n    <div className={\"listContainer\"}>\r\n\r\n      {gpaData.byYear !== undefined ? gpaData.byYear.map(year => {\r\n        return <ResultItem type={\"学年\"} title={year.year} gpa={year.gpa.toFixed(4)} wam={year.wam.toFixed(4)}/>\r\n      }) : \"\"}\r\n    </div>\r\n    <div className={\"listContainer\"}>\r\n\r\n      {gpaData.bySemester !== undefined ? gpaData.bySemester.map(semester => {\r\n        return <ResultItem type={\"学期\"} title={semester.semesterName} gpa={semester.gpa.toFixed(4)} wam={semester.wam.toFixed(4)}/>\r\n      }) : \"\"}\r\n    </div>\r\n  </>\r\n}\r\n\r\nexport default ResultList\r\n","import \"./index.css\"\r\n\r\nconst Header = () => {\r\n  return <h1 className={\"header\"}>LNTU GPA Calculator</h1>\r\n}\r\n\r\nexport default Header\r\n","export default class GradePointAverage {\r\n  constructor(HTMLString) {\r\n    this.__processHTMLString(HTMLString)\r\n    this.totalSubjects = []\r\n    this.__rawData2Array()\r\n    this.__classifySubjects()\r\n  }\r\n\r\n  __processHTMLString(HTMLString) {\r\n    const dom = new DOMParser().parseFromString(HTMLString, 'text/html')\r\n    const dataTable = dom.querySelector('.grid table tbody')\r\n    this.rawScoreData = dataTable.querySelectorAll('tr')\r\n  }\r\n\r\n  __rawData2Array() {\r\n    this.rawScoreData.forEach((subject) => {\r\n      let info = subject.querySelectorAll('td')\r\n      // 取出相关数据\r\n      let name = info[3].childNodes[0].textContent\r\n        .replaceAll('\\n', '')\r\n        .replaceAll('\\t', '')\r\n        .trim()\r\n      let semester = info[0].textContent\r\n      let credit = parseFloat(info[5].textContent)\r\n      let score\r\n      let gradePoint\r\n      if (info.length > 13) {\r\n        // 如果有挂科，表结构不同\r\n        score = parseInt(info[12].textContent)\r\n        gradePoint = parseFloat(info[13].textContent)\r\n      } else {\r\n        // 如果没有挂科\r\n        score = parseInt(info[10].textContent)\r\n        gradePoint = parseFloat(info[11].textContent)\r\n      }\r\n\r\n      if (this.__isNotPassedSubject(info)) {\r\n        if (this.__isValidNotPassedSubjectInfo(info)) {\r\n          // console.log(name)\r\n          this.__addSubject(name, score, credit, gradePoint, semester)\r\n        }\r\n        return\r\n      }\r\n      this.__addSubject(name, score, credit, gradePoint, semester)\r\n    })\r\n  }\r\n\r\n  __isNotPassedSubject(subjectInfo) {\r\n    return subjectInfo[3].childNodes[1] !== undefined\r\n  }\r\n\r\n  __isValidNotPassedSubjectInfo(subjectInfo) {\r\n    let type = subjectInfo[3].childNodes[1].textContent\r\n      .replaceAll('\\n', '')\r\n      .replaceAll('\\t', '')\r\n      .trim()\r\n    return type.includes('补考')\r\n  }\r\n\r\n  __addSubject(\r\n    subjectName,\r\n    subjectScore,\r\n    subjectCredit,\r\n    subjectGradePoint,\r\n    subjectSemester\r\n  ) {\r\n    this.totalSubjects.push(\r\n      this.__createNewSubjectData(\r\n        subjectName,\r\n        subjectScore,\r\n        subjectCredit,\r\n        subjectGradePoint,\r\n        subjectSemester\r\n      )\r\n    )\r\n  }\r\n\r\n  __createNewSubjectData(\r\n    subjectName,\r\n    subjectScore,\r\n    subjectCredit,\r\n    subjectGradePoint,\r\n    subjectSemester\r\n  ) {\r\n    return {\r\n      subjectName,\r\n      subjectScore,\r\n      subjectCredit,\r\n      subjectGradePoint,\r\n      subjectSemester,\r\n    }\r\n  }\r\n\r\n  __classifySubjects() {\r\n    this.subjectsOfSemesters = {}\r\n    this.subjectsOfYears = {}\r\n    this.totalSubjects.forEach((data) => {\r\n      if (this.subjectsOfSemesters[data.subjectSemester] === undefined) {\r\n        this.subjectsOfSemesters[data.subjectSemester] = {\r\n          semesterName: data.subjectSemester,\r\n          scores: [],\r\n        }\r\n      }\r\n      let year = data.subjectSemester.slice(0, -2)\r\n      if (this.subjectsOfYears[year] === undefined) {\r\n        this.subjectsOfYears[year] = {\r\n          year,\r\n          scores: [],\r\n        }\r\n      }\r\n      this.subjectsOfSemesters[data.subjectSemester].scores.push(data)\r\n      this.subjectsOfYears[year].scores.push(data)\r\n    })\r\n    // console.log('semesters:', this.subjectsOfSemesters)\r\n    // console.log('years:', this.subjectsOfYears)\r\n    return this.subjectsOfSemesters\r\n  }\r\n\r\n  __computeGPA(subjects) {\r\n    let totalGradePointMulCredit = 0\r\n    let totalCredit = 0\r\n    subjects.forEach((info) => {\r\n      totalCredit += info.subjectCredit\r\n      totalGradePointMulCredit += info.subjectGradePoint * info.subjectCredit\r\n    })\r\n    return totalGradePointMulCredit / totalCredit\r\n  }\r\n\r\n  __levelConvert2Score(gradePoint) {\r\n    switch (gradePoint) {\r\n      case 4.5:\r\n        return 95\r\n      case 4:\r\n        return 90\r\n      case 3.5:\r\n        return 85\r\n      case 3:\r\n        return 80\r\n      case 2.5:\r\n        return 75\r\n      case 2:\r\n        return 70\r\n      case 1.5:\r\n        return 65\r\n      case 1.0:\r\n        return 60\r\n      default:\r\n        return 0\r\n    }\r\n  }\r\n\r\n  __computeWAM(subjects) {\r\n    let totalScoreMulCredit = 0\r\n    let totalCredit = 0\r\n    subjects.forEach((info) => {\r\n      totalCredit += info.subjectCredit\r\n      if (Number.isNaN(info.subjectScore)) {\r\n        info.subjectScore = this.__levelConvert2Score(info.subjectGradePoint)\r\n      }\r\n      totalScoreMulCredit += info.subjectScore * info.subjectCredit\r\n    })\r\n    return totalScoreMulCredit / totalCredit\r\n  }\r\n\r\n  get gpaAndWAM() {\r\n    let result = {}\r\n    result.byYear = []\r\n    result.bySemester = []\r\n    result.gpa = this.__computeGPA(this.totalSubjects)\r\n    result.wam = this.__computeWAM(this.totalSubjects)\r\n    for (const semester in this.subjectsOfSemesters) {\r\n      result.bySemester.push({\r\n        semesterName: this.subjectsOfSemesters[semester].semesterName,\r\n        gpa: this.__computeGPA(this.subjectsOfSemesters[semester].scores),\r\n        wam: this.__computeWAM(this.subjectsOfSemesters[semester].scores),\r\n      })\r\n    }\r\n    for (const year in this.subjectsOfYears) {\r\n      result.byYear.push({\r\n        year: this.subjectsOfYears[year].year,\r\n        gpa: this.__computeGPA(this.subjectsOfYears[year].scores),\r\n        wam: this.__computeWAM(this.subjectsOfYears[year].scores),\r\n      })\r\n    }\r\n    return result\r\n  }\r\n}\r\n","import {useContext, useEffect, useRef, useState} from \"react\";\r\nimport \"./index.css\"\r\nimport GradePointAverage from \"../../utils/GPA\";\r\nimport {AppContext} from \"../../App\";\r\n\r\nconst FileReaderComponent = () => {\r\n\r\n  const [fileInfo, setFileInfo] = useState({\r\n    name: \"\",\r\n    size: 0\r\n  })\r\n\r\n  const [loaded, setLoaded] = useState(false)\r\n  const [computed, setComputed] = useState(false)\r\n\r\n  const file = useRef(-1)\r\n\r\n  useEffect(() => {\r\n    if (fileInfo.size) {\r\n      setLoaded(true)\r\n      setComputed(false)\r\n    }\r\n  }, [fileInfo])\r\n\r\n  const GPAStat = useContext(AppContext)\r\n\r\n  const calculate = () => {\r\n    if (!file.current.files[0]) {\r\n      alert(\"请选择文件\")\r\n      return\r\n    }\r\n    setComputed(true)\r\n    let fileReader = new FileReader()\r\n    const currentFile = file.current.files[0]\r\n    fileReader.readAsText(currentFile, 'utf-8')\r\n    fileReader.onloadend = function (evt) {\r\n      // 在文件读取完毕后，其内容将被保存在result属性中\r\n      const content = evt.target.result\r\n      try {\r\n        const gpa = new GradePointAverage(content)\r\n        GPAStat.setGPAData(gpa.gpaAndWAM)\r\n      } catch (error) {\r\n        alert(\"文件格式错误或内容异常，请重新选择\")\r\n        setComputed(false)\r\n        setLoaded(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  return <>\r\n    <div className={\"fileReader\"}>\r\n      <input type=\"file\" name=\"file\" id=\"file\" className={\"hidden\"} ref={file} onChange={(event) => {setFileInfo({\r\n        name: event.target.files[0].name || \"\",\r\n        size: event.target.files[0].size + \" Bytes\" || 0\r\n      })}\r\n      }/>\r\n      <label htmlFor=\"file\" className={\"Btn selectBtn\"}>选择文件</label>\r\n      <label className={\"Btn calculateBtn\"} onClick={calculate}>计算成绩 </label>\r\n    </div>\r\n    {loaded ? <div className=\"notice\">\r\n      <p className={\"notice-item\"}>{computed ? \"计算结果如下\":\"文件已加载\"}</p>\r\n    </div> : \"\"}\r\n  </>\r\n}\r\n\r\nexport default FileReaderComponent\r\n","import \"./index.css\"\r\nconst Footer = () => {\r\n  return <>\r\n    <div className={\"footer\"}>\r\n      <p className={\"footer-item\"}>参与制作:</p>\r\n      <p className={\"footer-item\"}>@xcl/软件学院</p>\r\n      <p className={\"footer-item\"}>@ddc/软件学院</p>\r\n      <p className={\"footer-item\"}>@RealmsPro/电子与信息工程学院</p>\r\n    </div>\r\n  </>\r\n}\r\n\r\nexport default Footer\r\n","import React, {useState} from \"react\";\nimport ResultList from \"./components/ResultList\";\nimport \"./App.css\"\nimport Header from \"./components/Header\";\nimport FileReader from \"./components/FileReader\";\nimport Footer from \"./components/Footer\";\nexport const AppContext = React.createContext({})\n\nfunction App() {\n  const [gpaData, setGPAData] = useState({\n      gpa: 0,\n      wam: 0,\n      bySemester: [],\n      byYear: []\n    })\n  // console.log(gpaData)\n  return <AppContext.Provider value={{gpaData, setGPAData}}>\n    <Header/>\n    <p className={\"readme\"}><a href=\"https://gpahelp.xcland.tech/\">使用指北</a></p>\n    <FileReader/>\n    <ResultList/>\n    <Footer/>\n  </AppContext.Provider>\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}